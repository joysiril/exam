package bmwbaseclass;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class WrapperClass 
{
	protected WebDriver dr;

	public void launch_browser(String url)
	{
	System.setProperty("webdriver.chrome.driver", "src/test/resouces/Drivers/chromedriver_v79.exe");
	dr=new ChromeDriver();
	dr.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
	dr.get(url);
	
	}

	public void quit()
	{
	dr.close();
	}
}




package bmwexcel;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class ExcelWrite 
{
	 File f=new File("src/test/resouces/Testdata/bmw.xlsx");
	 
		public void write_excel(int r,int c,String s) throws IOException
		 {
			  FileInputStream fil = new FileInputStream(f);
			  XSSFWorkbook workbook = new XSSFWorkbook(fil);
			  XSSFSheet sheet=workbook.getSheet("Sheet1");
			  XSSFRow row =sheet.createRow(r);
			  XSSFCell cell=row.createCell(c);
			  FileOutputStream fos=new FileOutputStream(f);
			  cell.setCellValue(s);
			  workbook.write(fos);
		 }
}


package bmwpagesPOM;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;

public class BMWPage
{
	public static WebDriver dr;

	@FindBy(xpath="/html/body/div[1]/div[2]/div/div/div/div[1]/div/div[1]/div[1]/div/div[1]/a")
	public WebElement model;

	@FindBy(xpath="/html/body/div[1]/div[2]/div/div/div/div[1]/div/div[1]/div[2]/div/div/div/div/div[1]/div/nav/div/div/div[4]/a")
	public WebElement seven;

	@FindBy(xpath="//div[@class='cosy-image-wrapper tw-relative']")
	public WebElement mouseover;
	
	@FindBy(xpath="/html/body/div[1]/div[2]/div/div/div/div[1]/div/div[1]/div[2]/div/div/div/div/div[2]/div/div[1]/div/div/a")
    public WebElement img;
	
	@FindBy(xpath="/html/body/div[5]/main/div[1]/div[5]/div/div/div/div/div/div[4]/nav/div/div[3]/a")
	public WebElement technical_data;

	@FindBy(xpath="/html/body/div[5]/main/div[1]/div/div[3]/div/div/div[2]/section[1]/div[3]/div/div[2]/div/table/tbody/tr[1]/td[2]/div")
	public WebElement speed;

	public void models()
	{
    	model.click();
	}

	public void sev()
	{
	seven.click();
	}

	public void seven_ser() 
	{
	     mouseover.click();
	     img.click();
	}

	public void td()
	{
	technical_data.click();
	}

	public String top_sp()
	{
	String s=speed.getText();
	System.out.println(s);
	return s;
	}
}


package bmwTestcases;

import java.io.IOException;

import org.openqa.selenium.support.PageFactory;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;


import bmwbaseclass.WrapperClass;
import bmwexcel.ExcelWrite;
import bmwpagesPOM.BMWPage;

public class BMWTestcase extends WrapperClass
{
	BMWPage bp;
	@BeforeTest
	public void startup()
	{
		launch_browser("https://www.bmw.in/en/");
	}

	
	@Test
	public void t1() throws  IOException
	{
		ExcelWrite ex=new ExcelWrite();
	bp=PageFactory.initElements(dr, BMWPage.class);
	bp.models();
	bp.sev();
	bp.seven_ser();
	bp.td();
	String s1=bp.top_sp();
	ex.write_excel(0,0,s1);
	int i=Integer.parseInt(s1);
	boolean b=false;
	if(i<500)
	{
		Assert.assertTrue(b,"Does not meet my requirements");
	}
	else
	{
		System.out.println("True");
	}
	}
	
	@AfterTest
	public void closeBrowser()
	{
		quit();
	}
}
